-- clase 10 
--DECLARACIONES DE FUNCIONES 
/*
CREATE [OR REPLACE]
FUNCTION NOMBRE _FUNCION 
[(PARAM1 IN DATATIPE, PARAM2 IN DATATYPE , ... )]
RETURN DATATYPE
IS 
--  DECLARACION DE VARIABLE LOCALES 
VARIABLE_RETORNO DATATYPE ;
BEGIN 
-- SENTENCIAS 
RETURN VARIABLE_RETORNO ;
[EXCEPTION]
-- SENTENCIAS DE CONTROL DE EXCECION
END NOMBRE_FINCION;

*/

/*
EJEMPLO :
CREAR UNA FUNCION LLAMADA FN_NOMBRE_DEPTO QUE RECIBA UN IDENTIFICADOR DE 
DEPARTAMENTO Y RETORNE EL 
NOMBRE DEL MISMO 


*/
SELECT * FROM DEPARTMENTS;

CREATE OR REPLACE
FUNCTION FN_NOMBRE_DEPTO (PDEP_ID NUMBER)
RETURN VARCHAR2
IS 
    VDEPARTMENT_NAME DEPARTMENTS.DEPARTMENT_NAME%TYPE;
BEGIN
    SELECT DEPARTMENT_NAME
    INTO VDEPARTMENT_NAME
    FROM DEPARTMENTS 
    WHERE DEPARTMENT_ID = PDEP_ID;
RETURN VDEPARTMENT_NAME; 
END FN_NOMBRE_DEPTO;
--OPCION 1
DECLARE 
    VNOMBRE_DEPTO VARCHAR2(100);
BEGIN 
      VNOMBRE_DEPTO := FN_NOMBRE_DEPTO(210);
      DBMS_OUTPUT.PUT_LINE('ID DEPTO: '||210); 
      DBMS_OUTPUT.PUT_LINE('NOMBRE DEPTO: '||VNOMBRE_DEPTO);
END;
--OPCION 1 (CON VARIABLE)
DECLARE
    VNOMBRE_DEPTO VARCHAR2(100);
    VID_DEPTO NUMBER := 210;
BEGIN
      VNOMBRE_DEPTO := FN_NOMBRE_DEPTO(VID_DEPTO);
      DBMS_OUTPUT.PUT_LINE('ID DEPTO: '|| VID_DEPTO); 
      DBMS_OUTPUT.PUT_LINE('NOMBRE DEPTO: '||VNOMBRE_DEPTO); 
END;
--OPCION 2
SELECT EMPLOYEE_ID, 
       FIRST_NAME||' '||LAST_NAME AS NOMBRE_APELLIDO, 
       FN_NOMBRE_DEPTO(DEPARTMENT_ID) AS DEPARTAMENTO 
FROM EMPLOYEES;

/*
1.Crear una función llamada DEPENDIENTES_TOTALES que reciba por parámetro un
identificador de empleado (EMPLOYEE_ID) y retorne la cantidad de personas a cargo.
2.Probar la función con SELECT … FROM DUAL;
3.Probar la función invocándola como una columna adicional en una consulta a la tabla EMPLOYEES
4.Ejecutar la query del punto 3 en una nueva sesión conectado como SYS
*/

CREATE OR REPLACE 
FUNCTION DEPENDIENTES_TOTALES(P_MANAGER EMPLOYEES.MANAGER_ID%TYPE) 
RETURN NUMBER IS 
  V_TOTAL NUMBER := 0; 
BEGIN 
  SELECT COUNT(*) 
  INTO V_TOTAL 
  FROM EMPLOYEES 
  WHERE MANAGER_ID = P_MANAGER; 
  RETURN V_TOTAL; 
END;

--EN HR 
SELECT T.EMPLOYEE_ID,T.FIRST_NAME,T.LAST_NAME, DEPENDIENTES_TOTALES(T.EMPLOYEE_ID) AS TOTAL, J.JOB_TITLE 
FROM EMPLOYEES T, JOBS J 
WHERE T.JOB_ID = J.JOB_ID
ORDER BY EMPLOYEE_ID;

--EN SYS
SELECT T.EMPLOYEE_ID,T.FIRST_NAME,T.LAST_NAME, HR.DEPENDIENTES_TOTALES(T.EMPLOYEE_ID) AS TOTAL, J.JOB_TITLE 
FROM HR.EMPLOYEES T, HR.JOBS J 
WHERE T.JOB_ID = J.JOB_ID
ORDER BY EMPLOYEE_ID;

/*grants 
Se deben otorgar permisos de ejecucion sobre la 
funcion para aquellos usuadios que no los tienen

GRANT EXECUTE ON DEPENDIENTES_TOTALES 
TO NOMBRE_USUARIO;

*/
SELECT *
FROM USER_OBJECTS 
WHERE OBJECT_TYPE = 'FUNCTION'; 
/

SELECT * 
FROM USER_PROCEDURES 
WHERE OBJECT_TYPE = 'FUNCTION';

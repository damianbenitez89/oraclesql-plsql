--EJERCICIO 1

CREATE TABLE CURSOS(
CURSO_ID NUMBER,
CURSO_NOMBRE VARCHAR2(100),
CURSO_DOCENTE NUMBER);

--EJERCICIO 2

ALTER TABLE CURSOS
ADD CONSTRAINT CURSO_ID_PK PRIMARY KEY(CURSO_ID);

--EJERCICIO 3

ALTER TABLE CURSOS
ADD CONSTRAINT CURSOS_EMPLOYEE_FK
FOREIGN KEY(CURSO_DOCENTE)
REFERENCES EMPLOYEES(EMPLOYEE_ID);

--EJERCICIO 4

CREATE TABLE CURSOS_CONFIRMADOS(
CURSO_ID NUMBER,
FECHA DATE,
LOCATION_ID NUMBER,
HORA_INICIO VARCHAR2(10),
HORA_FIN VARCHAR2(10),
CONSTRAINT CURSO_ID_FECHA_PK PRIMARY KEY(CURSO_ID,FECHA),
CONSTRAINT LOCATION_ID_FK FOREIGN KEY(LOCATION_ID)
REFERENCES LOCATIONS (LOCATION_ID));

--EJERCICIO 5
CREATE TABLE PARTICIPANTES (
CURSO_ID NUMBER,
FECHA DATE,
EMPLOYEE_ID NUMBER,
ASISTIO VARCHAR (1));

--EJERCICIO 6

ALTER TABLE PARTICIPANTES
ADD CONSTRAINT CURSO_ID_FECHA_EMPLOYEE_ID_PK
PRIMARY KEY(CURSO_ID,FECHA,EMPLOYEE_ID);

--EJERCICIO 7

ALTER TABLE PARTICIPANTES
ADD CONSTRAINT CURSO_ID_FECHA_FK FOREIGN KEY(CURSO_ID,FECHA)
REFERENCES CURSOS_CONFIRMADOS(CURSO_ID,FECHA);

--EJERCICIO 8

ALTER TABLE PARTICIPANTES
ADD CONSTRAINT S_N_CHARS CHECK (ASISTIO IN('S','N'));

--EJERCICIO 9

CREATE VIEW CURSOS_V AS
SELECT * FROM CURSOS;
CREATE VIEW PARTICIPANTES_V AS
SELECT * FROM PARTICIPANTES;
CREATE VIEW CURSOS_CONFIRMADOS_V AS
SELECT * FROM CURSOS_CONFIRMADOS;

--EJERCICIO 10

CREATE VIEW PROXIMOS_CURSOS AS
SELECT CU.CURSO_NOMBRE,CC.FECHA,LO.CITY,EMP2.FIRST_NAME || ' ' || EMP2.LAST_NAME AS DOCENTE,EMP.FIRST_NAME || ' ' || EMP.LAST_NAME AS EMPLEADO
FROM CURSOS CU
JOIN EMPLOYEES EMP2 ON CU.CURSO_DOCENTE=EMP2.EMPLOYEE_ID
JOIN CURSOS_CONFIRMADOS CC ON CU.CURSO_ID=CC.CURSO_ID
JOIN PARTICIPANTES P ON P.CURSO_ID=CC.CURSO_ID
JOIN EMPLOYEES EMP ON EMP.EMPLOYEE_ID=P.EMPLOYEE_ID
JOIN LOCATIONS LO ON LO.LOCATION_ID=CC.LOCATION_ID;

--EJERCICIO 1

CREATE TABLE CURSOS(
CURSO_ID NUMBER,
CURSO_NOMBRE VARCHAR2(100),
CURSO_DOCENTE NUMBER);

--EJERCICIO 2

ALTER TABLE CURSOS
ADD CONSTRAINT CURSO_ID_PK PRIMARY KEY(CURSO_ID);

--EJERCICIO 3

ALTER TABLE CURSOS
ADD CONSTRAINT CURSOS_EMPLOYEE_FK
FOREIGN KEY(CURSO_DOCENTE)
REFERENCES EMPLOYEES(EMPLOYEE_ID);

--EJERCICIO 4

CREATE TABLE CURSOS_CONFIRMADOS(
CURSO_ID NUMBER,
FECHA DATE,
LOCATION_ID NUMBER,
HORA_INICIO VARCHAR2(10),
HORA_FIN VARCHAR2(10),
CONSTRAINT CURSO_ID_FECHA_PK PRIMARY KEY(CURSO_ID,FECHA),
CONSTRAINT LOCATION_ID_FK FOREIGN KEY(LOCATION_ID)
REFERENCES LOCATIONS (LOCATION_ID));

--EJERCICIO 5
CREATE TABLE PARTICIPANTES (
CURSO_ID NUMBER,
FECHA DATE,
EMPLOYEE_ID NUMBER,
ASISTIO VARCHAR (1));

--EJERCICIO 6

ALTER TABLE PARTICIPANTES
ADD CONSTRAINT CURSO_ID_FECHA_EMPLOYEE_ID_PK
PRIMARY KEY(CURSO_ID,FECHA,EMPLOYEE_ID);

--EJERCICIO 7

ALTER TABLE PARTICIPANTES
ADD CONSTRAINT CURSO_ID_FECHA_FK FOREIGN KEY(CURSO_ID,FECHA)
REFERENCES CURSOS_CONFIRMADOS(CURSO_ID,FECHA);

--EJERCICIO 8

ALTER TABLE PARTICIPANTES
ADD CONSTRAINT S_N_CHARS CHECK (ASISTIO IN('S','N'));

--EJERCICIO 9

CREATE VIEW CURSOS_V AS
SELECT * FROM CURSOS;
CREATE VIEW PARTICIPANTES_V AS
SELECT * FROM PARTICIPANTES;
CREATE VIEW CURSOS_CONFIRMADOS_V AS
SELECT * FROM CURSOS_CONFIRMADOS;

--EJERCICIO 10

CREATE VIEW PROXIMOS_CURSOS AS
SELECT CU.CURSO_NOMBRE,CC.FECHA,LO.CITY,EMP2.FIRST_NAME || ' ' || EMP2.LAST_NAME AS DOCENTE,EMP.FIRST_NAME || ' ' || EMP.LAST_NAME AS EMPLEADO
FROM CURSOS CU
JOIN EMPLOYEES EMP2 ON CU.CURSO_DOCENTE=EMP2.EMPLOYEE_ID
JOIN CURSOS_CONFIRMADOS CC ON CU.CURSO_ID=CC.CURSO_ID
JOIN PARTICIPANTES P ON P.CURSO_ID=CC.CURSO_ID
JOIN EMPLOYEES EMP ON EMP.EMPLOYEE_ID=P.EMPLOYEE_ID
JOIN LOCATIONS LO ON LO.LOCATION_ID=CC.LOCATION_ID;

--EJERCICIO 1

CREATE TABLE CURSOS(
CURSO_ID NUMBER,
CURSO_NOMBRE VARCHAR2(100),
CURSO_DOCENTE NUMBER);

--EJERCICIO 2

ALTER TABLE CURSOS
ADD CONSTRAINT CURSO_ID_PK PRIMARY KEY(CURSO_ID);

--EJERCICIO 3

ALTER TABLE CURSOS
ADD CONSTRAINT CURSOS_EMPLOYEE_FK
FOREIGN KEY(CURSO_DOCENTE)
REFERENCES EMPLOYEES(EMPLOYEE_ID);

--EJERCICIO 4

CREATE TABLE CURSOS_CONFIRMADOS(
CURSO_ID NUMBER,
FECHA DATE,
LOCATION_ID NUMBER,
HORA_INICIO VARCHAR2(10),
HORA_FIN VARCHAR2(10),
CONSTRAINT CURSO_ID_FECHA_PK PRIMARY KEY(CURSO_ID,FECHA),
CONSTRAINT LOCATION_ID_FK FOREIGN KEY(LOCATION_ID)
REFERENCES LOCATIONS (LOCATION_ID));

--EJERCICIO 5
CREATE TABLE PARTICIPANTES (
CURSO_ID NUMBER,
FECHA DATE,
EMPLOYEE_ID NUMBER,
ASISTIO VARCHAR (1));

--EJERCICIO 6

ALTER TABLE PARTICIPANTES
ADD CONSTRAINT CURSO_ID_FECHA_EMPLOYEE_ID_PK
PRIMARY KEY(CURSO_ID,FECHA,EMPLOYEE_ID);

--EJERCICIO 7

ALTER TABLE PARTICIPANTES
ADD CONSTRAINT CURSO_ID_FECHA_FK FOREIGN KEY(CURSO_ID,FECHA)
REFERENCES CURSOS_CONFIRMADOS(CURSO_ID,FECHA);

--EJERCICIO 8

ALTER TABLE PARTICIPANTES
ADD CONSTRAINT S_N_CHARS CHECK (ASISTIO IN('S','N'));

--EJERCICIO 9

CREATE VIEW CURSOS_V AS
SELECT * FROM CURSOS;
CREATE VIEW PARTICIPANTES_V AS
SELECT * FROM PARTICIPANTES;
CREATE VIEW CURSOS_CONFIRMADOS_V AS
SELECT * FROM CURSOS_CONFIRMADOS;

--EJERCICIO 10

CREATE VIEW PROXIMOS_CURSOS AS
SELECT CU.CURSO_NOMBRE,CC.FECHA,LO.CITY,EMP2.FIRST_NAME || ' ' || EMP2.LAST_NAME AS DOCENTE,EMP.FIRST_NAME || ' ' || EMP.LAST_NAME AS EMPLEADO
FROM CURSOS CU
JOIN EMPLOYEES EMP2 ON CU.CURSO_DOCENTE=EMP2.EMPLOYEE_ID
JOIN CURSOS_CONFIRMADOS CC ON CU.CURSO_ID=CC.CURSO_ID
JOIN PARTICIPANTES P ON P.CURSO_ID=CC.CURSO_ID
JOIN EMPLOYEES EMP ON EMP.EMPLOYEE_ID=P.EMPLOYEE_ID
JOIN LOCATIONS LO ON LO.LOCATION_ID=CC.LOCATION_ID;


/*
1 Elaborar una sentencia SQL que permita crear la tabla CURSOS. La configuraci?n de
los campos debe ser
*/

CREATE TABLE CURSOS(
CURSO_ID NUMBER NOT NULL,
CURSO_NOMBRE VARCHAR2(50) NOT NULL,
CURSO_DOCENTE NUMBER NOT NULL
);
/*
2. Elaborar una sentencia SQL que permita modificar la tabla CURSOS agreg?ndole una
primary key sobre el campo CURSO_ID.
*/
ALTER TABLE CURSOS
ADD CONSTRAINT PK_CURSOS PRIMARY KEY (CURSO_ID);
/*
3. Elaborar una sentencia SQL que permita modificar la tabla CURSOS
agreg?ndole una foreign key sobre el campo CURSO_DOCENTE que referencie hacia el campo EMPLOYEE_ID de la tabla EMPLOYEES.
*/

ALTER TABLE CURSOS
ADD CONSTRAINT FK_CURSO_DOCENTE FOREIGN KEY (CURSO_DOCENTE)
REFERENCES EMPLOYEES (EMPLOYEE_ID);

/*
Elaborar una sentencia SQL que permita crear la tabla CURSOS_CONFIRMADOS. La configuraci?n de los campos debe ser:
*/
/
CREATE TABLE CURSOS_CONFIRMADOS (
CURSO_ID NUMBER NOT NULL,
FECHA DATE,
LOCATION_ID NUMBER,
HORA_INICIO VARCHAR2(10),
HORA_FIN  VARCHAR2
);
/*
Incluir en la sentencia de creaci?n la generaci?n de la clave primaria formada por los campos CURSO_ID y FECHA.
Incluir tambi?n la creaci?n de la clave for?nea en el campo LOCATION_ID que referencia al campo LOCATION_ID de la tabla LOCATIONS
*/
ALTER TABLE CURSOS_CONFIRMADOS
ADD CONSTRAINT PK_CURSO_ID PRIMARY KEY (CURSO_ID);

ALTER TABLE CURSOS_CONFIRMADOS
ADD CONSTRAINT PK_FECHA PRIMARY KEY (FECHA);
SELECT * FROM CURSOS_CONFIRMADOS;

/*
1 Elaborar una sentencia SQL que permita crear la tabla CURSOS. La configuraci?n de
los campos debe ser
*/

CREATE TABLE CURSOS(
CURSO_ID NUMBER NOT NULL,
CURSO_NOMBRE VARCHAR2(50) NOT NULL,
CURSO_DOCENTE NUMBER NOT NULL
);
/*
2. Elaborar una sentencia SQL que permita modificar la tabla CURSOS agreg?ndole una
primary key sobre el campo CURSO_ID.
*/
ALTER TABLE CURSOS
ADD CONSTRAINT PK_CURSOS PRIMARY KEY (CURSO_ID);
/*
3. Elaborar una sentencia SQL que permita modificar la tabla CURSOS
agreg?ndole una foreign key sobre el campo CURSO_DOCENTE que referencie hacia el campo EMPLOYEE_ID de la tabla EMPLOYEES.
*/

ALTER TABLE CURSOS
ADD CONSTRAINT FK_CURSO_DOCENTE FOREIGN KEY (CURSO_DOCENTE)
REFERENCES EMPLOYEES (EMPLOYEE_ID);

/*
Elaborar una sentencia SQL que permita crear la tabla CURSOS_CONFIRMADOS. La configuraci?n de los campos debe ser:
*/
/
CREATE TABLE CURSOS_CONFIRMADOS (
CURSO_ID NUMBER NOT NULL,
FECHA DATE,
LOCATION_ID NUMBER,
HORA_INICIO VARCHAR2(10),
HORA_FIN  VARCHAR2
);
/*
Incluir en la sentencia de creaci?n la generaci?n de la clave primaria formada por los campos CURSO_ID y FECHA.
Incluir tambi?n la creaci?n de la clave for?nea en el campo LOCATION_ID que referencia al campo LOCATION_ID de la tabla LOCATIONS
*/
ALTER TABLE CURSOS_CONFIRMADOS
ADD CONSTRAINT PK_CURSO_ID PRIMARY KEY (CURSO_ID);

ALTER TABLE CURSOS_CONFIRMADOS
ADD CONSTRAINT PK_FECHA PRIMARY KEY (FECHA);
SELECT * FROM CURSOS_CONFIRMADOS;
